1. 題目解析: 字串中連續且不重複的字元組成長度最長是多少。
2. 如何計算: 每次移動一個字元，如果沒出現過就amount++，如果出現過就儲存當前最大的ans並重置amount。
3. 當前問題: 如何知道字元是否出現過?
4. 解決方法: 利用unordered_set儲存
5. 實作方法: 設L、R當作當前的sliding window，L不動，每次移動R，且偵測set中是否有R存在，
   若是則儲存當前長度並重置set，並使L = R、R++以及重置amount。
6. 失敗，原因: 若在重複時直接使L = R會導致兩個相同的字母中間間隔的字母皆被捨棄，最終導致答案錯誤。
7. 解決方法: 使用map儲存元素是否存在及記錄index，在重複後使L = 第一個遇到的重複字母的index+1。
8. 失敗，重構: 設L、R當作當前的sliding window，L不動，每次移動R，且偵測map中是否有R存在，
   若是則儲存當前長度並使L移動到第一個R值位置+1的位置，且在移動時同時在map中刪除經過的字元。
9, 方法成功，時間複雜度O(n)。