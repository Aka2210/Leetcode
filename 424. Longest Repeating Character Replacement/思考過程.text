1. 解析後的問題:可以任意將k個字元改變，改變後相同字元連續的最大長度為多少?

2. 如何判斷最大長度:設一個sliding window，右極限持續增加直到遇到不相同字元時無法改變，判斷完之後左極限向右一格，
    重複一次右極限移動、判斷，直到右極限=s.size() - 1後結束判斷，得到答案。

3. 實作可能方法:設L、R = 0，如果L != R且k>0，k--直到R = s.size() - 1或k == 0，使ans判斷max(R-L)，
    然後L++，如果L與原本相同則L++直到L變得不同，若不同則偵測當前map中L的數量使k = L~R的距離-L的數量，
    若k仍小於等於0則L++並重新執行判斷，若k>0則執行R增加的判斷。

4. 失敗，原因:若是ABBB則會導致L從B開始時無法考慮到後方情況(也就是無法考慮到將A變為B的情況)。

5. 解決方法:改變判斷方法，將L、R移動方式改為L固定R移動到!=L的前一格後，同時向左、向右增加，
    直到k = 1後判斷向左增加會較大還是像右增加較大，最後使R++,L = R開始重新判斷。

6. 重構: 使L、R = 0後R持續++並記錄經過的字母，若L!=R就k--直到k = 0或R = s.size() - 1，然後移動窗口(L++、R++)，
    移動後將L當作當前的主要替代字母，根據紀錄計算後若k>0就使窗口擴大，若<=0則使窗口移動至下一個主要字母。

7. 失敗，當前問題: 如何使雙向問題變為單向(雙向問題:以某數字為主後，當前連續字串單獨向左或單獨向右或同時會導致不同結果)。

8. 問題解決方式: 只需要抓取當前範圍中最多的字以他為基準點，剩下的字的數量加起來<=k就可以了。